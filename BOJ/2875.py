# 백준알고리즘 2747번
# https://www.acmicpc.net/problem/2747

# 문제
# 백준대학교에서는 대회에 나갈 때 2명의 여학생과 1명의 남학생이 팀을 결성해서 나가는 것이 원칙이다. (왜인지는 총장님께 여쭈어보는 것이 좋겠다.)

# 백준대학교는 뛰어난 인재들이 많아 올해에도 N명의 여학생과 M명의 남학생이 팀원을 찾고 있다.

# 그런데 올해에는 대회에 참여하려는 학생들 중 K명을 반드시 인턴쉽 프로그램에 참여하라는 학교의 방침이 생기게 되었다. 인턴쉽에 참여하는 학생은 대회에 참여하지 못한다.

# 백준대학교에서는 뛰어난 인재들이 많기 때문에, 많은 팀을 만드는 것이 최선이다.

# 여러분은 N명의 여학생과 M명의 남학생, K명의 인턴쉽에 참여해야하는 인원이 주어질 때 만들 수 있는 최대의 팀 수를 구하면 된다.

# 입력
# 첫째 줄에 N, M, K가 순서대로 주어진다. (0 ≤ M ≤ 100), (0 ≤ N ≤ 100), (0 ≤ K ≤ M+N),

# 출력
# 만들 수 있는 팀의 최댓값을 출력하면 된다.

n, m, k = map(int, input().split(" "))


def pair(n, m):
    c = 0
    while(n > 1 and m >= 1):
        n -= 2
        m -= 1
        if m < 0:
            return c
        c += 1
    return c


if n == 0 or m == 0:
    print(0)
elif k == 0:
    print(pair(n, m))
else:
    while(k != 0):
        mPair = pair(n, m-1)
        nPair = pair(n-1, m)

        k -= 1
        if mPair > nPair:
            m -= 1
            c = mPair
        else:
            n -= 1
            c = nPair
    print(c)
